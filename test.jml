
# simple copying
data.original = input
data.subtype = input.type

# literals
data.type = "facebook"

# data parsing and formatting functions
data.created = input.created_time.or(env.now.asISO8601()).fromISO8601().asRFC2822()

# capture side-effects in the environemnt object
data.received = env.now.asRFC2822()

# complex ID generation
data.id = data.created.fromRFC2822().uuid(input.type, input.id.or(""), from.id.or(""))

# control flow with pattern matching
case data.subtype of {
  "like" =>
    # rely on the environment for some additional context
    data.content = input.from.name.concat("-likes-").concat(env.post.id)
  _ =>
    data.content = input.message.or(input.picture).or(input.link)
}

